@{
    ViewData["Title"] = "Calendario de Reservas";
}

<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/locales-all.global.min.js"></script>

<div class="container my-4">
    <h2>Calendario de Reservas</h2>

    <select id="laboratorioSelect" class="form-select mb-3">
        <option value="">-- Todos --</option>
        @foreach (var lab in ViewBag.Laboratorios as List<AplicacionReservas.Models.Laboratorio>)
        {
            <option value="@lab.Id">@lab.Nombre</option>
        }
    </select>

    <div id="calendar" style="background-color: white; padding: 20px; border-radius: 10px;"></div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        // Calcular fecha del próximo lunes (solo para initialDate)
        const today = new Date();
        const dayOfWeek = today.getDay(); // 0 = Domingo, 1 = Lunes, ..., 6 = Sábado
        const daysUntilNextMonday = (8 - dayOfWeek) % 7 || 7;
        const nextMonday = new Date(today);
        nextMonday.setDate(today.getDate() + daysUntilNextMonday);

        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'timeGridWeek',
            initialDate: nextMonday.toISOString().split('T')[0], // Iniciar en lunes próximo
            locale: 'es',
            height: 'auto',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'timeGridWeek,timeGridDay'
            },
            slotMinTime: "07:00:00",
            slotMaxTime: "20:00:00",
            allDaySlot: false,

            events: function (fetchInfo, successCallback, failureCallback) {
                const laboratorioId = document.getElementById('laboratorioSelect')?.value || '';
                fetch(`/Reservas/ObtenerReservas?laboratorioId=${encodeURIComponent(laboratorioId)}`)
                    .then(response => response.json())
                    .then(data => successCallback(data))
                    .catch(error => failureCallback(error));
            },

            eventDidMount: function (info) {
                const grupoTexto = info.event.extendedProps.grupo
                    ? `<strong>Grupo:</strong> ${info.event.extendedProps.grupo}<br/>`
                    : "";

                const tooltip = new bootstrap.Tooltip(info.el, {
                    title: `
                        <strong>Código:</strong> ${info.event.extendedProps.codigo}<br/>
                        <strong>Usuario:</strong> ${info.event.extendedProps.email}<br/>
                        <strong>Laboratorio:</strong> ${info.event.extendedProps.laboratorio}<br/>
                        ${grupoTexto}
                        <strong>Inicio:</strong> ${new Date(info.event.start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}<br/>
                        <strong>Fin:</strong> ${new Date(info.event.end).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                    `,
                    placement: 'top',
                    trigger: 'hover',
                    html: true
                });
            }
        });

        calendar.render();

        // Refrescar eventos cuando cambie la selección del laboratorio
        const laboratorioSelect = document.getElementById('laboratorioSelect');
        if (laboratorioSelect) {
            laboratorioSelect.addEventListener('change', function () {
                calendar.refetchEvents();
            });
        }
    });
</script>
